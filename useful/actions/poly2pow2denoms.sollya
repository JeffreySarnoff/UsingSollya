/*

    machpoly(p::poly)
    Given a polynomial computed in Sollya, convert it to the nearest one where the coeff denominators are powers of 2.
*/


procedure poly2coeffs(ply) {
   var dg, cfs;
   var i;
   dg = degree(ply);
   cfs = [| |];
   for i from 0 to dg do {
     cfs =  cfs :. coeff(ply, i);
   };
   return cfs;
};

procedure coeffs2poly(cfs) {
   var n, ply, i;
   n = length(cfs) - 1;
   ply = cfs[0];
   for i from 1 to n do {
     ply = ply + cfs[i]*(x^i);
   };
   return ply;
};

procedure coeffs2dyadic(cfs) {
   var cfsexp, cfsfrac, res;
   cfsexp = [||];
   cfsfrac = [||];
   for v in cfs do {
     cfsexp = cfsexp :. exponent(v);
     cfsfrac = cfsfrac :. mantissa(v);
   };
   res = [| cfsfrac, crsexp |];
   return res;
};
